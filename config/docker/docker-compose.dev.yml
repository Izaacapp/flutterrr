# docker-compose.yml - Development Environment
version: '3.8'

services:
  # MongoDB - Shared database
  mongodb:
    image: mongo:6.0
    container_name: mern_flutter_mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
      - "./scripts/mongo-init.js:/docker-entrypoint-initdb.d/init.js:ro"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER:-root}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASS:-pass}
      MONGO_INITDB_DATABASE: ${MONGO_DB_NAME:-devdb}
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app_network

  # Backend - GraphQL Backend
  backend:
    container_name: mern_flutter_backend
    build:
      context: .
      dockerfile: ./backend/Dockerfile.dev
    volumes:
      - ./backend/src:/app/backend/src
      - ./shared:/app/shared
      - /app/backend/node_modules
      - backend_uploads:/app/backend/uploads
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=${PORT:-3000}
      - MONGO_URI=${MONGO_URI}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-7d}
      - JWT_COOKIE_EXPIRES_IN=${JWT_COOKIE_EXPIRES_IN:-7}
      - STORAGE_TYPE=${STORAGE_TYPE:-local}
      - UPLOAD_DIR=${UPLOAD_DIR:-./uploads}
      - UPLOAD_URL=${UPLOAD_URL}
      - MAILTRAP_TOKEN=${MAILTRAP_TOKEN}
      - MAILTRAP_ENDPOINT=${MAILTRAP_ENDPOINT}
      - EMAIL_PROVIDER=${EMAIL_PROVIDER:-mailtrap}
      - RESEND_API_KEY=${RESEND_API_KEY}
      - EMAIL_FROM=${EMAIL_FROM:-noreply@passportbuddy.dev}
      - EMAIL_FROM_NAME=${EMAIL_FROM_NAME:-Passport Buddy Dev}
      - OTP_EXPIRY_MINUTES=${OTP_EXPIRY_MINUTES:-5}
      - API_HOST=${API_HOST:-localhost}
      - DO_SPACES_KEY=${DO_SPACES_KEY}
      - DO_SPACES_SECRET=${DO_SPACES_SECRET}
      - DO_SPACES_ENDPOINT=${DO_SPACES_ENDPOINT}
      - DO_SPACES_BUCKET=${DO_SPACES_BUCKET}
      - DO_SPACES_REGION=${DO_SPACES_REGION}
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - app_network
    restart: unless-stopped

  # Frontend - React Frontend
  frontend:
    container_name: mern_flutter_frontend
    build:
      context: .
      dockerfile: ./frontend/Dockerfile.dev
    volumes:
      - ./frontend/src:/app/frontend/src
      - ./shared:/app/shared
      - /app/frontend/node_modules
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - VITE_API_URL=${VITE_API_URL}
      - VITE_GRAPHQL_URL=${VITE_GRAPHQL_URL}
      - VITE_WS_URL=${VITE_WS_URL}
    depends_on:
      - backend
    networks:
      - app_network
    restart: unless-stopped

  # Nginx - Reverse proxy (optional but helpful)
  nginx:
    image: nginx:alpine
    container_name: mern_flutter_proxy
    ports:
      - "80:80"
    volumes:
      - "./config/nginx/dev.conf:/etc/nginx/conf.d/default.conf:ro"
    depends_on:
      - backend
      - frontend
    networks:
      - app_network

volumes:
  mongo_data:
    driver: local
  backend_uploads:
    driver: local

networks:
  app_network:
    driver: bridge