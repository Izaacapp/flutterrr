# Builder stage
FROM node:18-alpine AS builder
WORKDIR /app

# Copy shared package files and install
COPY shared/package*.json shared/package-lock.json ./shared/
WORKDIR /app/shared
RUN npm install

# Copy shared source and build it
COPY shared/ ./
RUN npm run build || echo "No build script for shared"

# Go back to root and copy backend package files
WORKDIR /app
COPY backend/package*.json backend/package-lock.json ./backend/
WORKDIR /app/backend
RUN npm install

# Copy all source code
WORKDIR /app
COPY . .

# Build the backend
WORKDIR /app/backend
RUN npm run build:prod

# Production stage
FROM node:18-alpine
WORKDIR /app

# Copy built app and package files
COPY --from=builder /app/backend/dist ./dist
COPY --from=builder /app/backend/package*.json ./

# Install only production dependencies (skip prepare script)
RUN npm ci --omit=dev --ignore-scripts

# Copy the shared module and create symlink (force if exists)
COPY --from=builder /app/shared /app/shared
RUN mkdir -p /app/node_modules/@my-app && \
    rm -f /app/node_modules/@my-app/shared && \
    ln -s /app/shared /app/node_modules/@my-app/shared

# Create uploads directory with proper permissions
RUN mkdir -p /app/uploads && \
    chown -R node:node /app/uploads

USER node
EXPOSE 3000
CMD ["node", "dist/server.js"]